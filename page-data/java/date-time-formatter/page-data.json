{"componentChunkName":"component---src-templates-blog-post-js","path":"/java/date-time-formatter/","result":{"data":{"site":{"siteMetadata":{"title":"Dev Logs","author":"tykim","siteUrl":"https://disj11.github.io","comment":{"disqusShortName":"","utterances":""},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"580483d1-4d70-5f67-b2ac-c8d0cab8d9b1","excerpt":"개요 Java8 에서 추가된  클래스에 대해 알아보자. 미리 정의된 인스턴스  에는 ISO 및 RFC 표준을 따라 정의되어 있는 날짜/시간 포맷을 제공한다. 예를들어  인스턴스를 사용하여 다음과 같이 ‘2021-09-29’ 와 같은 문자열을 얻을 수 있다. 만약 ‘2021-09-29+09:00’ 와 같이 오프셋을 포함한 문자열을 구하고 싶다면  를 사용한다. FormatStyle의 사용 사람이 이해하기 쉽게 날짜를 보여주고 싶을때가 있다. 이럴 때에는  을 사용할 수 있다.  은 enum…","html":"<h2 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h2>\n<p>Java8 에서 추가된 <code class=\"language-text\">DateTimeFormatter</code> 클래스에 대해 알아보자.</p>\n<h2 id=\"미리-정의된-인스턴스\" style=\"position:relative;\"><a href=\"#%EB%AF%B8%EB%A6%AC-%EC%A0%95%EC%9D%98%EB%90%9C-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4\" aria-label=\"미리 정의된 인스턴스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>미리 정의된 인스턴스</h2>\n<p><code class=\"language-text\">DateTimeFormatter</code> 에는 ISO 및 RFC 표준을 따라 정의되어 있는 날짜/시간 포맷을 제공한다. 예를들어 <code class=\"language-text\">ISO_LOCAL_DATE</code> 인스턴스를 사용하여 다음과 같이 ‘2021-09-29’ 와 같은 문자열을 얻을 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">LocalDate</span> date <span class=\"token operator\">=</span> <span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token number\">2021</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">.</span>ISO_LOCAL_DATE<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2021-09-29</span></code></pre></div>\n<p>만약 ‘2021-09-29+09:00’ 와 같이 오프셋을 포함한 문자열을 구하고 싶다면 <code class=\"language-text\">ISO_OFFSET_DATE</code> 를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">LocalDate</span> date <span class=\"token operator\">=</span> <span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token number\">2021</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">.</span>ISO_OFFSET_DATE<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">atStartOfDay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ZoneId</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UTC+9\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2021-09-29+09:00</span></code></pre></div>\n<h2 id=\"formatstyle의-사용\" style=\"position:relative;\"><a href=\"#formatstyle%EC%9D%98-%EC%82%AC%EC%9A%A9\" aria-label=\"formatstyle의 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>FormatStyle의 사용</h2>\n<p>사람이 이해하기 쉽게 날짜를 보여주고 싶을때가 있다. 이럴 때에는 <code class=\"language-text\">java.time.format.FormatStyle</code> 을 사용할 수 있다. <code class=\"language-text\">FormatStyle</code> 은 enum 값으로 FULL, LONG, MEDIUM, SHORT가 정의 되어있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">LocalDate</span> day <span class=\"token operator\">=</span> <span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token number\">2021</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofLocalizedDate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FormatStyle</span><span class=\"token punctuation\">.</span>FULL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofLocalizedDate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FormatStyle</span><span class=\"token punctuation\">.</span>LONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofLocalizedDate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FormatStyle</span><span class=\"token punctuation\">.</span>MEDIUM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofLocalizedDate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FormatStyle</span><span class=\"token punctuation\">.</span>SHORT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>출력은 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Wednesday, September 29, 2021\nSeptember 29, 2021\nSep 29, 2021\n9/29/21</code></pre></div>\n<p><code class=\"language-text\">ZonedDateTime</code> 인스턴스를 사용하여 날짜와 시간을 함께 표현할 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">LocalDate</span> day <span class=\"token operator\">=</span> <span class=\"token class-name\">LocalDate</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token number\">2021</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">LocalTime</span> time <span class=\"token operator\">=</span> <span class=\"token class-name\">LocalTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">ZonedDateTime</span> zonedDateTime <span class=\"token operator\">=</span> <span class=\"token class-name\">ZonedDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>day<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ZoneId</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Asia/Seoul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofLocalizedDateTime</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FormatStyle</span><span class=\"token punctuation\">.</span>FULL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>zonedDateTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofLocalizedDateTime</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FormatStyle</span><span class=\"token punctuation\">.</span>LONG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>zonedDateTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofLocalizedDateTime</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FormatStyle</span><span class=\"token punctuation\">.</span>MEDIUM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>zonedDateTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofLocalizedDateTime</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FormatStyle</span><span class=\"token punctuation\">.</span>SHORT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>zonedDateTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>출력은 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Wednesday, September 29, 2021 at 1:12:45 PM Korean Standard Time\nSeptember 29, 2021 at 1:12:45 PM KST\nSep 29, 2021, 1:12:45 PM\n9/29/21, 1:12 PM</code></pre></div>\n<p>반대로 문자열을 <code class=\"language-text\">ZonedDateTime</code> 으로 변경하고 싶다면 <code class=\"language-text\">format()</code> 메서드 대신 <code class=\"language-text\">parse()</code> 메서드를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">ZonedDateTime</span> dateTime <span class=\"token operator\">=</span> <span class=\"token class-name\">ZonedDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofLocalizedDateTime</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FormatStyle</span><span class=\"token punctuation\">.</span>FULL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Wednesday, September 29, 2021 at 1:12:45 PM Korean Standard Time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"사용자-정의-포맷\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98-%ED%8F%AC%EB%A7%B7\" aria-label=\"사용자 정의 포맷 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용자 정의 포맷</h2>\n<p>미리 정의된 포맷이 아닌 직접 포맷을 정의하여 사용하고 싶을 때가 있다. 이럴때에는 <code class=\"language-text\">ofPattern()</code> 메서드를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> pattern <span class=\"token operator\">=</span> <span class=\"token string\">\"yyyy-MM-dd'T'HH:mm:ss\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">DateTimeFormatter</span> formatter <span class=\"token operator\">=</span> <span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofPattern</span><span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>formatter<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2021-09-29T12:26:18</span></code></pre></div>\n<p>패턴 문자의 수는 중요하다. 예를들어 month에 <code class=\"language-text\">MM</code> 과 같은 패턴을 사용한다면 1월을 “01”로 표기하며, <code class=\"language-text\">M</code> 과 같이 표기할 경우 1월을 “1”로 표기한다.</p>\n<p>자주 사용하는 패턴 문자는 다음과 같다.</p>\n<table>\n<thead>\n<tr>\n<th>문자</th>\n<th>의미</th>\n<th>표시</th>\n<th>예시</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>u</td>\n<td>year</td>\n<td>year</td>\n<td>2004; 04</td>\n</tr>\n<tr>\n<td>y</td>\n<td>year-of-era</td>\n<td>year</td>\n<td>2004; 04</td>\n</tr>\n<tr>\n<td>M/L</td>\n<td>month-of-year</td>\n<td>number/text</td>\n<td>7; 07; Jul; July; J</td>\n</tr>\n<tr>\n<td>d</td>\n<td>day-of-month</td>\n<td>number</td>\n<td>10</td>\n</tr>\n<tr>\n<td>H</td>\n<td>hour-of-day (0-23)</td>\n<td>number</td>\n<td>0</td>\n</tr>\n<tr>\n<td>m</td>\n<td>minute-of-hour</td>\n<td>number</td>\n<td>30</td>\n</tr>\n<tr>\n<td>s</td>\n<td>second-of-minute</td>\n<td>number</td>\n<td>55</td>\n</tr>\n<tr>\n<td>S</td>\n<td>fraction-of-second</td>\n<td>number</td>\n<td>978</td>\n</tr>\n<tr>\n<td>n</td>\n<td>nano-of-second</td>\n<td>number</td>\n<td>987654321</td>\n</tr>\n</tbody>\n</table>\n<p>추가적인 패턴 문자를 알고 싶다면 <a href=\"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html\">Java documentation</a>의 Pattern Letters and Symbols 표를 확인한다.</p>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>이번 포스트에서는 <code class=\"language-text\">DateTimeFormatter</code> 에 대하여 알아보았다. <code class=\"language-text\">DateTimeFormatter</code> 은 <code class=\"language-text\">SimpleDateFormat</code> 과 달리 스레드에 안전하고 더 최적화 되어있으므로 만약 java8 이상 버전을 사용한다면 <code class=\"language-text\">SimpleDateFormat</code> 대신 <code class=\"language-text\">DateTimeFormatter</code> 을 사용하자.</p>\n<p>참고 자료: <a href=\"https://www.baeldung.com/java-datetimeformatter\">Guide to DateTimeFormatter</a></p>","frontmatter":{"title":"자바 날짜 포맷","date":"September 29, 2021"}}},"pageContext":{"slug":"/java/date-time-formatter/","previous":{"fields":{"slug":"/database/isolation-level/"},"frontmatter":{"title":"격리 수준 (Isolation level)"}},"next":{"fields":{"slug":"/spring/transaction-definition/"},"frontmatter":{"title":"트랜잭션 속성"}}}}}