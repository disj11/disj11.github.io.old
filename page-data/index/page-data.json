{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Dev Logs","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"개요 이전 포스트에서 프록시 팩토리와 한계점에 관하여 알아보았다. 이번 포스트에서는 이러한 한계점을 스프링은 어떤 방식으로 해결책을 제시하였는지 알아보자. ProxyFactoryBean 스프링은 프록시 오브젝트를 생성해주는 기술을 추상화한 팩토리 빈을 제공해준다.  이 스프링에서 제공해주는 팩토리 빈이다.  을 상속받아서 구현했던 TxProxyFactor…","fields":{"slug":"/spring/proxy-3-proxy-factory-bean/"},"frontmatter":{"date":"September 27, 2021","title":"프록시 3 - 프록시 팩토리 빈과 빈 후처리기","category":"spring","draft":false}}},{"node":{"excerpt":"개요 이번 포스트에서는 이전 포스트에서 다뤘던 프록시의 문제를 해결하기 위한 다이내믹 프록시에 대해서 알아보고, 다이내믹 프록시를 적용하여 기존 코드의 문제를 해결해보자. 리플렉션 다이내믹 프록시를 이해하려면 우선 리플렉션에 대해 알아야한다. 리플렉션은 자바의 코드 자체를 추상화해서 접근할 수 있도록 만든 것이며, 이를 쉽게 사용하도록  패키지를 제공한다…","fields":{"slug":"/spring/proxy-2-dynamic-proxy/"},"frontmatter":{"date":"September 27, 2021","title":"프록시 2 - 다이내믹 프록시와 팩토리 빈","category":"spring","draft":false}}},{"node":{"excerpt":"개요 트랜잭션 추상화 기법을 적용한 서비스를 리팩토링 해가며 프록시의 개념을 이해하고, 프록시를 활용한 디자인 패턴인 프록시 패턴과 데코레이터 패턴에 대해 알아보자. Service 트랜잭션 서비스 추상화 포스트에서 다음과 같은 유저 등급 설정 메서드를 만든 적이 있다. 코드를 자세히 살펴보면 트랜잭션의 경계를 설정하는 코드와 비지니스 로직으로 구분할 수 …","fields":{"slug":"/spring/proxy-1-proxy-and-pattern/"},"frontmatter":{"date":"September 27, 2021","title":"프록시 1 - 프록시와 프록시를 사용한 패턴","category":"spring","draft":false}}},{"node":{"excerpt":"개요 트랜잭션 기능을 사용한 서비스를 리팩토링 해가며 스프링에서 트랜젝션 서비스를 어떤 방식으로 제공해 주는지 알아보자. Service 다음과 같이 사용자의 등급을 올리는 서비스 메서드가 있다고 하자. 이 서비스는 작업을 수행하는 도중 오류가 발생하여도, 오류가 발생하기 전까지 변경된 사용자의 레벨은 변경된 상태로 유지된다. 오류가 발생할 경우 변경된 내…","fields":{"slug":"/spring/abstract-transaction-model/"},"frontmatter":{"date":"September 27, 2021","title":"트랜잭션 서비스 추상화","category":"spring","draft":false}}},{"node":{"excerpt":"개요 JDBC를 사용한 코드의 문제점을 확인하고, 문제점을 하나씩 수정해가면서 템플릿/콜백 패턴을 이해해보자. DAO JDBC를 사용해본 경험이 있다면 다음과 같은 코드를 본 기억이 있을 것이다. 자바 7 이상 버전이라면  를 사용해야겠지만, 앞으로 설명할 템플릿 콜백 패턴을 더 잘 설명하기 위해 이와 같은 코드를 작성하였다. 이 코드는 예외 처리를 하여…","fields":{"slug":"/spring/template-callback/"},"frontmatter":{"date":"September 27, 2021","title":"템플릿/콜백 패턴의 이해","category":"spring","draft":false}}}]}},"pageContext":{}}}