{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/git/conventional-commits/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Dev Logs","author":"tykim","siteUrl":"https://disj11.github.io","comment":{"disqusShortName":"","utterances":"disj11/disj11.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"017fb140-134a-501b-acad-b2b6cdec8643","excerpt":"개요 Conventional Commits…","html":"<h2 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h2>\n<p>Conventional Commits 스펙은 명확한 커밋 히스토리를 생성하기 위해 간단한 규칙을 제공한다.</p>\n<h2 id=\"구조\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EC%A1%B0\" aria-label=\"구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구조</h2>\n<p>커밋 메시지는 다음과 같은 구조이어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;타입>[적용 범위(선택 사항)]: &lt;설명>\n\n[본문(선택 사항)]\n\n[꼬리말(선택 사항)]</code></pre></div>\n<ol>\n<li>타입을 명시한 뒤에는 <code class=\"language-text\">:</code>과 <code class=\"language-text\">공백</code>이 존재해야 한다.</li>\n<li>설명은 코드 변경 사항에 대한 짧은 요약이다.</li>\n<li>본문에는 코드 변경 사항에 대한 추가적인 정보를 제공한다. 본문은 반드시 설명 다음 빈 행으로 시작해야 한다.</li>\n<li>본문은 형식이 자유로우며 여러 단락들로 구성 될 수 있다.</li>\n<li>하나 또는 다수의 꼬리말을 사용할 수 있으며, 본문 다음 빈 행을 추가한 후 작성한다.</li>\n<li>각각의 꼬리말은 단어 뒤에 <code class=\"language-text\">:</code>와 <code class=\"language-text\">공백</code> 또는 <code class=\"language-text\">공백#</code>를 작성하고, 그 뒤에 문자열 값으로 구성되어야 한다.</li>\n<li>꼬리말의 단어는 공백 문자 대신 <code class=\"language-text\">-</code>를 사용해야 한다.</li>\n</ol>\n<p>추가적인 규격은 <a href=\"https://www.conventionalcommits.org/ko/v1.0.0/#%EA%B7%9C%EA%B2%A9\">conventional commits</a>에서 확인할 수 있다.</p>\n<h2 id=\"커밋-타입\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%B0%8B-%ED%83%80%EC%9E%85\" aria-label=\"커밋 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커밋 타입</h2>\n<table>\n<thead>\n<tr>\n<th>커밋 타입</th>\n<th>타이틀</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">feat</code></td>\n<td>기능</td>\n<td>새로운 기능 추가</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">fix</code></td>\n<td>버그 픽스</td>\n<td>버그의 수정</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">docs</code></td>\n<td>문서</td>\n<td>문서의 변경</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">style</code></td>\n<td>스타일</td>\n<td>코드의 의미에 영향을 주지 않는 변경 (공백, 코드 포맷, 세미콜론 추가 등)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">refactor</code></td>\n<td>코드 리팩터링</td>\n<td>버그나 새로운 기능을 추가하지 않는 코드의 변경</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">perf</code></td>\n<td>성능 향상</td>\n<td>성능을 향상시키는 코드의 변경</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">test</code></td>\n<td>테스트</td>\n<td>누락된 테스트의 추가 또는 기존의 테스트 수정</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">build</code></td>\n<td>빌드</td>\n<td>빌드 시스템 또는 외부 종속성에 영향을 주는 변경사항 (gulp, npm 등)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">ci</code></td>\n<td>Continuous Integrations</td>\n<td>CI 구성 파일 및 스크립트의 변경 (Travis, Circle, BrowserStack, SauceLabs 등)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">chore</code></td>\n<td>기타</td>\n<td>src 또는 테스트 파일 외의 기타 변경 사항</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">revert</code></td>\n<td>Reverts</td>\n<td>이전 커밋의 revert</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"예시\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C\" aria-label=\"예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">feat(로그인): 로그인 기능 추가\n\n카카오 아이디로 로그인 기능을 추가함\n\nReviewed-by: Z\nRefs: #123</code></pre></div>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>Conventional Commits 스펙을 지키며 커밋을 하려할 때 커밋 타입의 선택에 난항을 겪을 때가 있다. 개인적으로는 너무 깊은 고민을 하지 않고 본인 스스로 맞다고 생각하는 커밋 타입을 선택하려 한다. 예를 들어 CSS를 변경할 경우, 변경의 목적이 새로운 기능의 추가일 경우는 <code class=\"language-text\">feat</code>, 버그의 수정일 경우는 <code class=\"language-text\">fix</code>로 할 수 있을 것이다. CSS를 변경하는 작업이라도 목적에 따라 커밋 타입이 변경 될 수 있기 때문에, 코드 변경자의 의도가 가장 중요하다고 생각한다.</p>","frontmatter":{"title":"Conventional Commit (커밋 규칙)","date":"October 28, 2021"}}},"pageContext":{"slug":"/git/conventional-commits/","previous":{"fields":{"slug":"/effective-java/item-34-use-enums-instead-of-int-constants/"},"frontmatter":{"title":"int 상수 대신 열거 타입을 사용하라"}},"next":{"fields":{"slug":"/kotlin/basic-syntax/"},"frontmatter":{"title":"코틀린 기본 문법"}}}},
    "staticQueryHashes": ["3078735561","3128451518"]}